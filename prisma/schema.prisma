generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ------------------------
// Modelo Usuario
// ------------------------
model Usuario {
  id_usuario      Int         @id @default(autoincrement())
  nome_completo   String
  email           String      @unique
  senha           String
  data_nascimento DateTime?
  foto_perfil     String?
  descricao       String?
  tipo_usuario    String
  grupos          Grupo[]     // relação 1:N com Grupo

  @@map("tbl_usuario")
}

// ------------------------
// Modelo Area
// ------------------------
model Area {
  id_area    Int     @id @default(autoincrement())
  nome_area  String
  grupos     Grupo[] // relação 1:N com Grupo

  @@map("tbl_area")
}

// ------------------------
// Modelo Grupo
// ------------------------
model Grupo {
  id_grupo       Int           @id @default(autoincrement())
  nome           String
  limite_membros Int
  descricao      String?
  imagem         String?
  id_area        Int
  id_usuario     Int

  usuario        Usuario       @relation(fields: [id_usuario], references: [id_usuario])
  area           Area          @relation(fields: [id_area], references: [id_area])
  calendarios    Calendario[]  // relação 1:N com Calendario

  @@map("tbl_grupo")
}

// ------------------------
// Modelo Calendario
// ------------------------
model Calendario {
  id_calendario Int      @id @default(autoincrement())
  nome_evento   String   @db.VarChar(100)
  data_evento   DateTime
  descricao     String
  link          String?  @db.VarChar(500)
  id_grupo      Int

  grupo Grupo @relation(fields: [id_grupo], references: [id_grupo])

  @@map("tbl_calendario")
}

// ------------------------
// MODELOS DE CHAT E MENSAGENS
// ------------------------

model ChatRoom {
  id_chat_room Int            @id @default(autoincrement())
  tipo         TipoChat       @db.Enum("TipoChat")
  id_grupo     Int?           
  criado_em    DateTime       @default(now())

  // Relações
  mensagens    Mensagem[]     @relation("ChatRoomMensagens")
  participantes ChatParticipant[] @relation("ChatRoomParticipantes")
}

model ChatParticipant {
  id_participante Int         @id @default(autoincrement())
  id_chat_room    Int
  id_usuario      Int

  // Relações
  chat_room ChatRoom @relation("ChatRoomParticipantes", fields: [id_chat_room], references: [id_chat_room])
  usuario   Usuario  @relation(fields: [id_usuario], references: [id_usuario])
}

model Mensagem {
  id_mensagem Int        @id @default(autoincrement())
  id_chat_room Int
  id_usuario   Int
  conteudo     String     @db.Text
  enviado_em   DateTime   @default(now())

  // Relações
  chat_room ChatRoom @relation("ChatRoomMensagens", fields: [id_chat_room], references: [id_chat_room])
  usuario   Usuario  @relation(fields: [id_usuario], references: [id_usuario])
}

// Enum para o tipo do chat (privado ou grupo)
enum TipoChat {
  privado
  grupo
}
